{"version":3,"sources":["webpack:///./guards/auth.guard.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/booking-status/booking-status.component.html","webpack:///./src/app/booking-status/booking-status.component.scss","webpack:///./src/app/booking-status/booking-status.component.ts","webpack:///./src/app/custom-validators.ts","webpack:///./src/app/edit-profile/edit-profile.component.html","webpack:///./src/app/edit-profile/edit-profile.component.scss","webpack:///./src/app/edit-profile/edit-profile.component.ts","webpack:///./src/app/find-clinic/find-clinic.component.html","webpack:///./src/app/find-clinic/find-clinic.component.scss","webpack:///./src/app/find-clinic/find-clinic.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/issue.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/patient/patient.component.html","webpack:///./src/app/patient/patient.component.scss","webpack:///./src/app/patient/patient.component.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/services/patient.service.ts","webpack:///./src/app/visit-history/visit-history.component.html","webpack:///./src/app/visit-history/visit-history.component.scss","webpack:///./src/app/visit-history/visit-history.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private patientService : PatientService, private router : Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if (this.patientService.loggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport {PatientComponent} from './patient/patient.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { FindClinicComponent } from './find-clinic/find-clinic.component';\r\nimport { AuthGuard } from 'guards/auth.guard';\r\nimport { BookingStatusComponent } from './booking-status/booking-status.component';\r\nimport { VisitHistoryComponent } from './visit-history/visit-history.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent },\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'patient', component: PatientComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'profile', component: ProfileComponent, canActivate:[AuthGuard]},\r\n  {path: 'edit-profile', component: EditProfileComponent},\r\n  {path: 'find-clinic', component: FindClinicComponent},\r\n  {path: 'booking-status', component: BookingStatusComponent},\r\n  {path: 'visit-history', component: VisitHistoryComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<app-nav></app-nav>\\r\\n<flash-messages></flash-messages>\\r\\n\\r\\n<section>\\r\\n  <router-outlet></router-outlet>\\r\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'patient';\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PatientComponent } from './patient/patient.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { IssueService } from './issue.service';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { FindClinicComponent } from './find-clinic/find-clinic.component';\r\nimport { PatientService } from './services/patient.service';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { AuthGuard } from 'guards/auth.guard';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BookingStatusComponent } from './booking-status/booking-status.component';\r\nimport { VisitHistoryComponent } from './visit-history/visit-history.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\n\r\nexport function getToken(): string {\r\n  return localStorage.getItem('id_token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    PatientComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    EditProfileComponent,\r\n    FindClinicComponent,\r\n    BookingStatusComponent,\r\n    VisitHistoryComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n    HttpClientModule,\r\n    HttpModule,\r\n    AngularFontAwesomeModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: getToken\r\n      }\r\n    }),\r\n    FormsModule,\r\n    FlashMessagesModule.forRoot()\r\n  ],\r\n  providers: [IssueService, PatientService, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table\\\" id=\\\"header\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\"><h3><b>Booking Status</b></h3></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container text-center\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Reference Number</th>\\r\\n          <th scope=\\\"col\\\">Clinic Name</th>\\r\\n          <th scope=\\\"col\\\">Booking Status</th>\\r\\n          <th scope=\\\"col\\\">Remarks</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let clinic of clinics\\\">\\r\\n        <tr>\\r\\n          <td></td>\\r\\n          <td>{{ clinic.name }}</td>\\r\\n          <td></td>\\r\\n          <td><button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#cancelModal\\\"><i class=\\\"fa fa-times-circle\\\"></i> Cancel</button></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--Cancel Modal Box-->\\r\\n<div>\\r\\n  <div class=\\\"modal fade\\\" id=\\\"cancelModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"cancelModal\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"cancelModalTitle\\\"><strong>Confirm Cancellation</strong></h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row rowspacing\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p><b>Please check the following details:</b></p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row rowspacing\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p>You have -- more patients infront of you.</p>\\r\\n              <p>Do you want to cancel your booking?</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Yes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--End of Cancel Modal Box-->\"","module.exports = \".row {\\n  margin-bottom: 20px; }\\n\\n.container {\\n  font-size: 16px; }\\n\\n#header {\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va2luZy1zdGF0dXMvRDpcXFNjaG9vbFxcTmFueWFuZyBQb2x5dGVjaG5pY1xcRmluYWwgUHJvamVjdCBOWVBcXEdyYWJIZWFsdGhXZWJcXEdyYWJIZWFsdGhXZWIvc3JjXFxhcHBcXGJvb2tpbmctc3RhdHVzXFxib29raW5nLXN0YXR1cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGdCQUFlLEVBQ2xCOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvYm9va2luZy1zdGF0dXMvYm9va2luZy1zdGF0dXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4jaGVhZGVyIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'; \r\nimport { PatientService } from '../services/patient.service';\r\n\r\n@Component({\r\n  selector: 'app-booking-status',\r\n  templateUrl: './booking-status.component.html',\r\n  styleUrls: ['./booking-status.component.scss']\r\n})\r\nexport class BookingStatusComponent implements OnInit {\r\n\r\n  clinic: any;\r\n  clinics: Array<any>;\r\n\r\n  constructor(private router : Router, private patientService : PatientService) { }\r\n\r\n  ngOnInit() {\r\n    this.getBookedClinics();\r\n  }\r\n\r\n  getBookedClinics(){\r\n    this.patientService.getBookedClinics().subscribe(\r\n      res => {\r\n        this.clinics=res['clinics'];\r\n      },\r\n      err => {\r\n        console.log(err);\r\n    });\r\n  }\r\n}\r\n","import { ValidationErrors, ValidatorFn, AbstractControl } from \"@angular/forms\";\r\n\r\nexport class CustomValidators {\r\n\r\n    static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n        return (control: AbstractControl): { [key: string]: any } => {\r\n          if (!control.value) {\r\n            // if control is empty return no error\r\n            return null;\r\n          }\r\n      \r\n          // test the value of the control against the regexp supplied\r\n          const valid = regex.test(control.value);\r\n      \r\n          // if true, return no error (no error), else return error passed in the second parameter\r\n          return valid ? null : error;\r\n        };\r\n      }\r\n\r\n      static passwordMatchValidator(control: AbstractControl) {\r\n        const password: string = control.get('password').value; // get password from our password form control\r\n        const confirmPassword: string = control.get('confirmPassword').value; // get password from our confirmPassword form control\r\n        // compare is the password math\r\n        if (password !== confirmPassword) {\r\n          // if they don't match, set an error in our confirmPassword form control\r\n          control.get('confirmPassword').setErrors({ NoPassswordMatch: true });\r\n        }\r\n      }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"patient\\\" class=\\\"container col\\\">\\r\\n    <div class=\\\"list-group float-left\\\">\\r\\n    <a routerLink=\\\"/profile\\\" class=\\\"list-group-item list-group-item-action text-center\\\" id=\\\"viewSide\\\">View Profile</a>\\r\\n    <a routerLink=\\\"/edit-profile\\\" class=\\\"list-group-item list-group-item-action active text-center\\\" id=\\\"editSide\\\">Edit Profile</a>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container float-right\\\" id=\\\"rightSide\\\">\\r\\n    <div class=\\\"container col-sm-2 float-left text-center\\\" id=\\\"rightInner\\\">\\r\\n        <img src=\\\"{{patient.attach}}\\\" width=\\\"150px\\\"/>\\r\\n        <label>Email:</label>\\r\\n        <input type=\\\"text\\\" class=\\\"text-line text-center\\\" [(ngModel)]=\\\"patient.email\\\"  value=\\\"{{patient.email}}\\\" disabled>\\r\\n        <br>\\r\\n        <label>Password:</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control text-line text-center\\\" [(ngModel)]=\\\"patient.password\\\" value=\\\"{{patient.password}}\\\">\\r\\n        <br>\\r\\n        <label>Confirm Password:</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control text-line text-center\\\" [(ngModel)]=\\\"patient.confirmPassword\\\" value=\\\"{{patient.confirmPassword}}\\\">\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"container col-sm-9 float-right\\\" id=\\\"rightInner\\\">\\r\\n      <label>First Name:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" [(ngModel)]=\\\"patient.firstName\\\" value=\\\"{{patient.firstName}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Last Name:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" [(ngModel)]=\\\"patient.lastName\\\" value=\\\"{{patient.lastName}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>NRIC/Passport No.:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" [(ngModel)]=\\\"patient.nric\\\" value=\\\"{{patient.nric}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Gender:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" [(ngModel)]=\\\"patient.gender\\\" value=\\\"{{patient.gender}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Contact No.:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control text-line text-center\\\" [(ngModel)]=\\\"patient.contactNo\\\" value=\\\"{{patient.contactNo}}\\\">\\r\\n      <br>\\r\\n      <label>Date of Birth:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" [(ngModel)]=\\\"patient.dob\\\" value=\\\"{{patient.dob}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Nationality:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" [(ngModel)]=\\\"patient.nationality\\\" value=\\\"{{patient.nationality}}\\\" disabled>  \\r\\n      <br>\\r\\n      <label>Address:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control text-line text-center\\\" [(ngModel)]=\\\"patient.address\\\" value=\\\"{{patient.address}}\\\">\\r\\n      <br>\\r\\n      <label>Postal Code:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control text-line text-center\\\" [(ngModel)]=\\\"patient.postalCode\\\" value=\\\"{{patient.postalCode}}\\\">\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" id=\\\"save\\\" (click)=\\\"onSaved()\\\">Save</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"#viewSide {\\n  margin-top: 50px;\\n  width: 250px; }\\n\\n#rightSide {\\n  margin-top: 50px;\\n  border-style: solid; }\\n\\n#rightInner {\\n  margin: 5px;\\n  padding: 10px; }\\n\\n.text-line {\\n  border: none;\\n  /* Get rid of the browser's styling */\\n  border-bottom: 1px solid gray;\\n  /* Add your own border */\\n  background-color: transparent;\\n  width: 100%; }\\n\\nlabel {\\n  margin-top: 10px;\\n  margin-bottom: 0px;\\n  margin-right: 10px;\\n  font-weight: bold; }\\n\\ninput:not([disabled]) {\\n  border: 1px solid gray; }\\n\\n#save {\\n  margin-top: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1wcm9maWxlL0Q6XFxTY2hvb2xcXE5hbnlhbmcgUG9seXRlY2huaWNcXEZpbmFsIFByb2plY3QgTllQXFxHcmFiSGVhbHRoV2ViXFxHcmFiSGVhbHRoV2ViL3NyY1xcYXBwXFxlZGl0LXByb2ZpbGVcXGVkaXQtcHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFnQjtFQUNoQixhQUFZLEVBQ2Y7O0FBRUQ7RUFDSSxpQkFBZ0I7RUFDaEIsb0JBQW1CLEVBQ3RCOztBQUVEO0VBQ0ksWUFBVztFQUNYLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxhQUFZO0VBQUUsc0NBQXNDO0VBQ3BELDhCQUE2QjtFQUFFLHlCQUF5QjtFQUN4RCw4QkFBNkI7RUFDN0IsWUFBVyxFQUNkOztBQUVEO0VBQ0ksaUJBQWdCO0VBQ2hCLG1CQUFrQjtFQUNsQixtQkFBa0I7RUFDbEIsa0JBQWlCLEVBQ3BCOztBQUVEO0VBQ0ksdUJBQXNCLEVBQ3pCOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvZWRpdC1wcm9maWxlL2VkaXQtcHJvZmlsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiN2aWV3U2lkZSB7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgd2lkdGg6IDI1MHB4O1xyXG59XHJcblxyXG4jcmlnaHRTaWRlIHtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG59XHJcblxyXG4jcmlnaHRJbm5lciB7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi50ZXh0LWxpbmUge1xyXG4gICAgYm9yZGVyOiBub25lOyAvKiBHZXQgcmlkIG9mIHRoZSBicm93c2VyJ3Mgc3R5bGluZyAqL1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGdyYXk7IC8qIEFkZCB5b3VyIG93biBib3JkZXIgKi9cclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuaW5wdXQ6bm90KFtkaXNhYmxlZF0pIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XHJcbn1cclxuXHJcbiNzYXZlIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PatientService } from '../services/patient.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n\r\n  patient:Object;\r\n\r\n  constructor(private router : Router, private patientService : PatientService, private flashMessagesService : FlashMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService.getPatientDetails().subscribe(\r\n      res => {\r\n        this.patient = res['patient'];\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n    });\r\n  }\r\n\r\n\r\n  onSaved(){\r\n    var flashMessagesService = this.flashMessagesService;\r\n\r\n    this.patientService.editPatientDetails(this.patient).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        if(res['success']) {\r\n          this.patientService.getPatientDetails();\r\n          flashMessagesService.show('Profile have been successfully updated', { cssClass: 'alert-success', timeout: 3000});\r\n        } else {\r\n          flashMessagesService.show('Error', { cssClass: 'alert-danger', timeout: 3000});\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table\\\" id=\\\"header\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\"><h3><b>Book A Clinic</b></h3></th>\\r\\n          <th scope=\\\"col\\\">\\r\\n            <form class=\\\"form-inline my-2 float-right\\\">\\r\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\r\\n              <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n            </form>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container text-center\\\">\\r\\n    <table class=\\\"table table-borderless\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\"><button type=\\\"button\\\" (click)=\\\"West = !West\\\" class=\\\"btn btn-outline-primary\\\">West</button></th>\\r\\n          <th scope=\\\"col\\\"><button type=\\\"button\\\" (click)=\\\"North = !North\\\" class=\\\"btn btn-outline-primary\\\">North</button></th>\\r\\n          <th scope=\\\"col\\\"><button type=\\\"button\\\" (click)=\\\"Central = !Central\\\" class=\\\"btn btn-outline-primary\\\">Central</button></th>\\r\\n          <th scope=\\\"col\\\"><button type=\\\"button\\\" (click)=\\\"Northeast = !Northeast\\\" class=\\\"btn btn-outline-primary\\\">Northeast</button></th>\\r\\n          <th scope=\\\"col\\\"><button type=\\\"button\\\" (click)=\\\"East = !East\\\" class=\\\"btn btn-outline-primary\\\">East</button></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n    </table>\\r\\n\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n        <tr *ngIf=\\\"West || North || Central || Northeast || East\\\">\\r\\n          <th scope=\\\"col\\\">Clinic Name</th>\\r\\n          <th scope=\\\"col\\\">Address</th>\\r\\n          <th scope=\\\"col\\\">Contact</th>\\r\\n          <th scope=\\\"col\\\">Location</th>\\r\\n          <th scope=\\\"col\\\">Book</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let clinic of clinics\\\">\\r\\n        <tr *ngIf=\\\"clinic.location === 'West' && West || clinic.location === 'North' && North || clinic.location === 'Central' && Central || clinic.location === 'Northeast' && Northeast || clinic.location === 'East' && East\\\">\\r\\n          <td>{{ clinic.name }}</td>\\r\\n          <td>{{ clinic.address }}</td>\\r\\n          <td>{{ clinic.contactNo }}</td>\\r\\n          <td>{{ clinic.location }}</td>\\r\\n          <td><button type=\\\"button\\\" (click)=\\\"viewBookingDetails(clinic)\\\" class=\\\"btn btn-outline-secondary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#bookingDetailsModal\\\"><i class=\\\"fa fa-book\\\"></i> Book</button></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--Booking Details Modal Box-->\\r\\n<div>\\r\\n  <div class=\\\"modal fade\\\" id=\\\"bookingDetailsModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"bookingDetailsModal\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"bookingDetailsModalTitle\\\"><strong>Booking Details</strong></h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row rowspacing\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p><b>Date:</b> {{today | date: 'dd/MM/yyyy'}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <p><b>Time:</b> {{today | date: 'hh:mm:ss a'}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row rowspacing\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p *ngIf=\\\"clinic\\\"><b>Name:</b> {{ clinic.name }}</p>\\r\\n              <p *ngIf=\\\"clinic\\\"><b>Address:</b> {{ clinic.address }}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row rowspacing\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p *ngFor=\\\"let session of sessions\\\"><b>{{ session.name }}: </b>{{ session.value }}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row rowspacing\\\">\\r\\n            <div class=\\\"col-6 col-sm-4\\\">\\r\\n              <p><b>Select Session:</b></p>\\r\\n            </div>\\r\\n            <div class=\\\"col-6 col-sm-4\\\">\\r\\n              <select class=\\\"form-control\\\" id=\\\"selectSession\\\" [(ngModel)]=\\\"selectSession\\\">\\r\\n                <option></option>\\r\\n                <option *ngFor=\\\"let session of sessions\\\">{{session.name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#confirmBookingModal\\\" data-dismiss=\\\"modal\\\">Next</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--End of Booking Details Modal Box-->\\r\\n\\r\\n<!--Confirm Booking Modal Box-->\\r\\n<div>\\r\\n  <div class=\\\"modal fade\\\" id=\\\"confirmBookingModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"confirmBookingModal\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"confirmBookingModalTitle\\\"><strong>Confirm Booking</strong></h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row rowspacing\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p><b>Please check the following details:</b></p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"border\\\">\\r\\n            <div class=\\\"row rowspacing\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <p>The clinic you have chosen is <b>{{ clinic.name }}</b>.</p>\\r\\n                <p>The session you have selected is <b>{{ selectSession }}</b>.</p>\\r\\n                <p>To confirm and book, click on 'Book'. Thank you!</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#bookingDetailsModal\\\" data-dismiss=\\\"modal\\\">Back</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onBooking()\\\" data-dismiss=\\\"modal\\\">Book</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--End of Confirm Booking Modal Box-->\"","module.exports = \".row {\\n  margin-bottom: 20px; }\\n\\n.container {\\n  font-size: 16px; }\\n\\n#header {\\n  margin-top: 10px; }\\n\\n.border {\\n  padding: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluZC1jbGluaWMvRDpcXFNjaG9vbFxcTmFueWFuZyBQb2x5dGVjaG5pY1xcRmluYWwgUHJvamVjdCBOWVBcXEdyYWJIZWFsdGhXZWJcXEdyYWJIZWFsdGhXZWIvc3JjXFxhcHBcXGZpbmQtY2xpbmljXFxmaW5kLWNsaW5pYy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGdCQUFlLEVBQ2xCOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksYUFBWSxFQUNmIiwiZmlsZSI6InNyYy9hcHAvZmluZC1jbGluaWMvZmluZC1jbGluaWMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4jaGVhZGVyIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5ib3JkZXIge1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'; \r\nimport { PatientService } from '../services/patient.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-find-clinic',\r\n  templateUrl: './find-clinic.component.html',\r\n  styleUrls: ['./find-clinic.component.scss']\r\n})\r\nexport class FindClinicComponent implements OnInit {\r\n\r\n  clinic: any;\r\n  clinics: Array<any>;\r\n\r\n  today: number = Date.now();\r\n\r\n  sessions = [\r\n    { name: \"Session 1\", value: \"0900 - 1300\" },\r\n    { name: \"Session 2\", value: \"1400 - 1800\" }\r\n  ];\r\n\r\n  constructor(private router : Router, private patientService : PatientService, private flashMessagesService : FlashMessagesService) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.getClinics();\r\n  }\r\n\r\n  getClinics(){\r\n    this.patientService.getClinics().subscribe(\r\n      res=> {\r\n        this.clinics = res['clinics'];\r\n      }, \r\n      err=> {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  viewBookingDetails(clinic){\r\n    this.clinic = clinic;\r\n  }\r\n\r\n  onBooking(){\r\n    var flashMessagesService = this.flashMessagesService;\r\n    \r\n    this.patientService.bookClinics(this.clinic).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        if (res['success']){\r\n          flashMessagesService.show('Successfully booked!', { cssClass: 'alert-success', timeout: 3000});\r\n        } else {\r\n          flashMessagesService.show('You have already made a booking!', { cssClass: 'alert-danger', timeout: 3000 });\r\n        }\r\n      }, \r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\r\\n  <h1 class=\\\"display-2\\\">GrabHealth</h1>\\r\\n  <h1 class=\\\"display-4\\\">Why choose us?</h1>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { IssueService } from '../issue.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private issueService: IssueService) { }\r\n\r\n  ngOnInit() {\r\n    this.issueService.getIssues().subscribe((issues) => {\r\n      console.log(issues);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IssueService {\r\n\r\n  uri = 'http://localhost:4000';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getIssues() {\r\n    return this.http.get(`${this.uri}/issues`);\r\n  }\r\n\r\n  getIssueById(id) {\r\n    return this.http.get(`${this.uri}/issues/${id}`);\r\n  }\r\n\r\n  addIssue(title, responsible, description, severity){\r\n    const issue = {\r\n      title: title,\r\n      responsible: responsible,\r\n      description: description,\r\n      severity: severity\r\n    };\r\n    return this.http.post(`${this.uri}/issues/add`, issue);\r\n  }\r\n\r\n  updateIssue(id, title, responsible, description, severity, status){\r\n    const issue = {\r\n      title: title,\r\n      responsible: responsible,\r\n      description: description,\r\n      severity: severity,\r\n      status: status\r\n    };\r\n    return this.http.post(`${this.uri}/issues/update/${id}`, issue);\r\n  }\r\n\r\n  deleteIssue(id){\r\n    return this.http.get(`${this.uri}/issues/delete/${id}`);\r\n  }\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"Absolute-Center is-Responsive\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-10 col-md-offset-1\\\">\\r\\n                    <div class=\\\"form-group input-group\\\">\\r\\n                        <span class=\\\"input-group-addon\\\"><i class=\\\"material-icons\\\">person</i></span>\\r\\n                        <input type=\\\"text\\\" placeholder=\\\"email\\\" class=\\\"form-control text-line\\\" id=\\\"email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.email.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">Required!</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group input-group\\\">    \\r\\n                            <span class=\\\"input-group-addon\\\"><i class=\\\"material-icons\\\">lock</i></span>\\r\\n                            <input type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.password.errors }\\\">\\r\\n                            <div *ngIf=\\\"submitted && loginForm.controls.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"loginForm.controls.password.errors.required\\\">Required!</div>\\r\\n                            </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group text-right\\\">\\r\\n                        <a href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\">Forget Password</a>\\r\\n\\r\\n                        <div class=\\\"modal\\\" id=\\\"modal\\\">\\r\\n                            <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n                              <div class=\\\"modal-content\\\">\\r\\n                                <div class=\\\"modal-header\\\">\\r\\n                                  <h5 class=\\\"modal-title\\\"><strong>Reset Password</strong></h5>\\r\\n                                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                                  </button>\\r\\n                                </div>\\r\\n                                <div class=\\\"modal-body\\\">\\r\\n                                  <p class=\\\"text-center\\\">Please enter the following details to request for a password reset.</p>\\r\\n                                  <div class=\\\"col text-left\\\">\\r\\n                                        <label for=\\\"contactNo\\\">Contact No.:</label>\\r\\n                                        <input type = \\\"text\\\" class=\\\"col-sm-5 form-control\\\" id=\\\"contactNo\\\" formControlName = \\\"contactNo\\\">\\r\\n                                        <label for=\\\"nric\\\">NRIC Issue Date:</label>\\r\\n                                        <input type = \\\"date\\\" class=\\\"col-sm-5 form-control\\\" id=\\\"nric\\\" formControlName = \\\"nric\\\">\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"modal-footer\\\">\\r\\n                                  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Send</button>\\r\\n                                  <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    \\r\\n\\r\\n                    <div class=\\\"form-group float-right\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\"","module.exports = \".Absolute-Center {\\n  margin: auto;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0; }\\n\\n.Absolute-Center.is-Responsive {\\n  width: 50%;\\n  height: 50%;\\n  min-width: 200px;\\n  max-width: 400px;\\n  padding: 40px; }\\n\\ndiv.well {\\n  height: 250px; }\\n\\n.invalid-feedback {\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXFNjaG9vbFxcTmFueWFuZyBQb2x5dGVjaG5pY1xcRmluYWwgUHJvamVjdCBOWVBcXEdyYWJIZWFsdGhXZWJcXEdyYWJIZWFsdGhXZWIvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQVk7RUFDWixtQkFBa0I7RUFDbEIsT0FBTTtFQUFFLFFBQU87RUFBRSxVQUFTO0VBQUUsU0FBUSxFQUNyQzs7QUFFRDtFQUNFLFdBQVU7RUFDVixZQUFXO0VBQ1gsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQixjQUFhLEVBQ2Q7O0FBRUQ7RUFDRSxjQUFhLEVBQ2Q7O0FBRUQ7RUFDRSxrQkFBaUIsRUFDbEIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5BYnNvbHV0ZS1DZW50ZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwOyBsZWZ0OiAwOyBib3R0b206IDA7IHJpZ2h0OiAwO1xyXG59XHJcbiAgXHJcbi5BYnNvbHV0ZS1DZW50ZXIuaXMtUmVzcG9uc2l2ZSB7XHJcbiAgd2lkdGg6IDUwJTsgXHJcbiAgaGVpZ2h0OiA1MCU7XHJcbiAgbWluLXdpZHRoOiAyMDBweDtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gIHBhZGRpbmc6IDQwcHg7XHJcbn1cclxuXHJcbmRpdi53ZWxse1xyXG4gIGhlaWdodDogMjUwcHg7XHJcbn0gXHJcblxyXG4uaW52YWxpZC1mZWVkYmFjayB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { PatientService } from '../services/patient.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  success = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private patientService : PatientService) { \r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid){\r\n      return;\r\n    }\r\n\r\n    this.patientService.authenticatePatient(this.loginForm.value).subscribe(\r\n      res => {\r\n        if(res['success']) {\r\n          this.patientService.storePatientData(res['token'], res['patient']);\r\n          this.router.navigateByUrl('profile');\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.router.navigateByUrl('login');\r\n      } \r\n    )\r\n\r\n    this.success = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">{{appTitle}}</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"/patient\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"!patientService.loggedIn()\\\" class=\\\"nav-link\\\">Sign Up</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"!patientService.loggedIn()\\\" class=\\\"nav-link\\\">Login</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"patientService.loggedIn()\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Welcome</a>\\r\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"patientService.loggedIn()\\\" routerLink=\\\"/profile\\\" routerLinkActive=\\\"active\\\">Profile</a>\\r\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"patientService.loggedIn()\\\" routerLink=\\\"/find-clinic\\\" routerLinkActive=\\\"active\\\">Make An Appointment</a>\\r\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"patientService.loggedIn()\\\" routerLink=\\\"/booking-status\\\" routerLinkActive=\\\"active\\\">Appointment Status</a>\\r\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"patientService.loggedIn()\\\" routerLink=\\\"/visit-history\\\" routerLinkActive=\\\"active\\\">Visit History</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a (click)=\\\"onLogoutClick()\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"patientService.loggedIn()\\\" class=\\\"nav-link\\\">Logout</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PatientService } from '../services/patient.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  appTitle: string = 'GrabHealth';\r\n\r\n  constructor(private router : Router, private patientService : PatientService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogoutClick(){\r\n    this.patientService.logout();\r\n    this.router.navigateByUrl('/');\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"Absolute-Center is-Responsive col-sm-12 col-md-10 col-md-offset-1\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"firstName\\\">First Name:</label>\\r\\n            <input type = \\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" formControlName = \\\"firstName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.firstName.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.firstName.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"lastName\\\">Last Name:</label>\\r\\n            <input type = \\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" formControlName = \\\"lastName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.lastName.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.lastName.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"nric\\\">NRIC/ Passport No.:</label>\\r\\n            <input type = \\\"text\\\" class=\\\"form-control\\\" id=\\\"nric\\\" formControlName = \\\"nric\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.nric.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.nric.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.nric.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"contactNo\\\">Contact No.:</label>\\r\\n            <input type = \\\"text\\\" class=\\\"form-control\\\" id=\\\"contactNo\\\" formControlName = \\\"contactNo\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.contactNo.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.contactNo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.contactNo.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n      \\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"gender\\\">Gender:</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"gender\\\" formControlName = \\\"gender\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.gender.errors }\\\">\\r\\n              <option>Male</option>\\r\\n              <option>Female</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.gender.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.gender.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"dob\\\">Date of Birth:</label>\\r\\n            <input type = \\\"date\\\" class=\\\"form-control\\\" id=\\\"dob\\\" formControlName = \\\"dob\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.dob.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.dob.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.dob.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"address\\\">Address:</label>\\r\\n            <input type = \\\"text\\\" placeholder=\\\"Blk 111 Happy Street 01\\\" class=\\\"form-control\\\" id=\\\"address\\\" formControlName = \\\"address\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.address.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.address.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"postalCode\\\">Postal Code:</label>\\r\\n            <input type = \\\"text\\\" placeholder=\\\"512111\\\" class=\\\"form-control\\\" id=\\\"postalCode\\\" formControlName = \\\"postalCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.postalCode.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.postalCode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.postalCode.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"nationality\\\">Nationality:</label>\\r\\n            <input type = \\\"text\\\" class=\\\"form-control\\\" id=\\\"nationality\\\" formControlName = \\\"nationality\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.nationality.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.nationality.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.nationality.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"attach\\\">Attach IC/ Passport Photo:</label>\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <div class=\\\"custom-file\\\">\\r\\n              <input type=\\\"file\\\" class=\\\"form-control custom-file-input\\\" id=\\\"attach\\\" formControlName = \\\"attach\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.attach.errors }\\\">\\r\\n              <label class=\\\"custom-file-label\\\" for=\\\"attach\\\">Choose file</label>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <span class=\\\"input-group-text\\\" id=\\\"\\\">Upload</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"submitted && registrationForm.controls.attach.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"registrationForm.controls.attach.errors.required\\\">Required!</div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">Email:</label>\\r\\n            <input type = \\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName = \\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.email.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.email.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">Password:</label>\\r\\n            <input type = \\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName = \\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.password.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.password.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n            <label class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.controls['password'].hasError('minlength')\\\">Must be at least 8 characters</label>\\r\\n            <label class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.controls['password'].hasError('hasNumber')\\\">Must contain at least 1 number</label>\\r\\n            <label class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.controls['password'].hasError('hasUpperCase')\\\">Must contain at least 1 Upper Case</label>\\r\\n            <label class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.controls['password'].hasError('hasLowerCase')\\\">Must be at least 1 Lower Case</label>\\r\\n            <label class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.controls['password'].hasError('hasSpecialCharacters')\\\">Must be at least 1 Special Character</label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"confirmPassword\\\">Confirm Password:</label>\\r\\n          <input  type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registrationForm.controls.confirmPassword.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && registrationForm.controls.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"registrationForm.controls.password.errors.required\\\">Required!</div>\\r\\n            </div>\\r\\n            <label class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.controls['confirmPassword'].hasError('NoPassswordMatch')\\\">Password do not match</label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group float-right\\\">\\r\\n          <button class=\\\"btn btn-primary \\\" type=\\\"submit\\\">Submit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n</form>\"","module.exports = \".Absolute-Center {\\n  margin: auto;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  padding: 50px; }\\n\\n.Absolute-Center.is-Responsive {\\n  width: 50%;\\n  height: 50%;\\n  min-width: 200px;\\n  max-width: 400px; }\\n\\ndiv.well {\\n  height: 250px; }\\n\\nlabel, .invalid-feedback {\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC9EOlxcU2Nob29sXFxOYW55YW5nIFBvbHl0ZWNobmljXFxGaW5hbCBQcm9qZWN0IE5ZUFxcR3JhYkhlYWx0aFdlYlxcR3JhYkhlYWx0aFdlYi9zcmNcXGFwcFxccGF0aWVudFxccGF0aWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQVk7RUFDWixtQkFBa0I7RUFDbEIsUUFBTztFQUFFLFNBQVE7RUFDakIsY0FBYSxFQUNkOztBQUVEO0VBQ0UsV0FBVTtFQUNWLFlBQVc7RUFDWCxpQkFBZ0I7RUFDaEIsaUJBQWdCLEVBQ2pCOztBQUVEO0VBQ0UsY0FBYSxFQUNkOztBQUVEO0VBQ0ksa0JBQWlCLEVBQ3BCIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC9wYXRpZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLkFic29sdXRlLUNlbnRlciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAwOyByaWdodDogMDtcclxuICBwYWRkaW5nOiA1MHB4O1xyXG59XHJcbiAgXHJcbi5BYnNvbHV0ZS1DZW50ZXIuaXMtUmVzcG9uc2l2ZSB7XHJcbiAgd2lkdGg6IDUwJTsgXHJcbiAgaGVpZ2h0OiA1MCU7XHJcbiAgbWluLXdpZHRoOiAyMDBweDtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG5kaXYud2VsbHtcclxuICBoZWlnaHQ6IDI1MHB4O1xyXG59IFxyXG5cclxubGFiZWwsIC5pbnZhbGlkLWZlZWRiYWNrIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4gICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators, FormArray } from '@angular/forms'; \r\nimport { CustomValidators } from '../custom-validators';\r\nimport { PatientService } from '../services/patient.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.scss']\r\n})\r\nexport class PatientComponent implements OnInit {\r\n  registrationForm = new FormGroup({\r\n    firstName: new FormControl('firstName'),\r\n    lastName: new FormControl('lastName'),\r\n    nric:new FormControl('nric'),\r\n    contactNo: new FormControl('contactNo'),\r\n    gender: new FormControl('gender'),\r\n    dob: new FormControl('dob'),\r\n    address: new FormControl('address'),\r\n    postalCode: new FormControl('postalCode'),\r\n    nationality: new FormControl('nationality'),\r\n    attach: new FormControl('attach'),\r\n    email: new FormControl('email'),\r\n    password: new FormControl('password'),\r\n  });\r\n  \r\n  submitted = false;\r\n  success = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private patientService: PatientService, private router: Router) { \r\n    this.registrationForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      nric: ['',Validators.required],\r\n      gender: ['',Validators.required],\r\n      dob: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      postalCode: ['', Validators.required],\r\n      nationality: ['', Validators.required],\r\n      contactNo: ['', Validators.required],\r\n      attach: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.compose([Validators.required, \r\n                                      CustomValidators.patternValidator(/\\d/, { hasNumber: true }),\r\n                                      CustomValidators.patternValidator(/[A-Z]/, { hasUpperCase: true }),\r\n                                      CustomValidators.patternValidator(/[a-z]/, { hasLowerCase: true }),\r\n                                      CustomValidators.patternValidator(/[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/, { hasSpecialCharacters: true }),\r\n                                      Validators.minLength(8)])],\r\n      confirmPassword: ['', Validators.required]\r\n    },\r\n    {\r\n      validator: CustomValidators.passwordMatchValidator\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted = true;\r\n\r\n    if(this.registrationForm.invalid){\r\n      return;\r\n    }\r\n    this.patientService.registerPatient(this.registrationForm.value).subscribe(\r\n      res=>{\r\n        if(res['success'])\r\n          this.router.navigateByUrl('login');\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      });\r\n      \r\n    this.success = true;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"patient\\\" class=\\\"container col\\\">\\r\\n  <div class=\\\"list-group float-left\\\">\\r\\n    <a routerLink=\\\"/profile\\\" class=\\\"list-group-item list-group-item-action active text-center\\\" id=\\\"viewSide\\\">View Profile</a>\\r\\n    <a routerLink=\\\"/edit-profile\\\" class=\\\"list-group-item list-group-item-action text-center\\\" id=\\\"editSide\\\">Edit Profile</a>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container float-right\\\" id=\\\"rightSide\\\">\\r\\n    <div class=\\\"container col-sm-2 float-left text-center\\\" id=\\\"rightInner\\\">\\r\\n        <img src=\\\"{{patient.attach}}\\\" width=\\\"150px\\\"/>\\r\\n        <label>Email:</label>\\r\\n        <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.email}}\\\" disabled>\\r\\n        <br>\\r\\n        <label>Password:</label>\\r\\n        <input type=\\\"password\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.password}}\\\" disabled>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"container col-sm-9 float-right\\\" id=\\\"rightInner\\\">\\r\\n      <label>First Name:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.firstName}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Last Name:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.lastName}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>NRIC/Passport No.:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.nric}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Gender:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.gender}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Contact No.:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.contactNo}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Date of Birth:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.dob}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Nationality:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.nationality}}\\\" disabled>  \\r\\n      <br>\\r\\n      <label>Address:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.address}}\\\" disabled>\\r\\n      <br>\\r\\n      <label>Postal Code:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"text-line text-center\\\" value=\\\"{{patient.postalCode}}\\\" disabled>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"#viewSide {\\n  margin-top: 50px;\\n  width: 250px; }\\n\\n#rightSide {\\n  margin-top: 50px;\\n  border-style: solid; }\\n\\n#rightInner {\\n  margin: 5px;\\n  padding: 10px; }\\n\\n.text-line {\\n  border: none;\\n  /* Get rid of the browser's styling */\\n  border-bottom: 1px solid gray;\\n  /* Add your own border */\\n  background-color: transparent;\\n  width: 100%; }\\n\\nlabel {\\n  margin-top: 10px;\\n  margin-bottom: 0px;\\n  margin-right: 10px;\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9EOlxcU2Nob29sXFxOYW55YW5nIFBvbHl0ZWNobmljXFxGaW5hbCBQcm9qZWN0IE5ZUFxcR3JhYkhlYWx0aFdlYlxcR3JhYkhlYWx0aFdlYi9zcmNcXGFwcFxccHJvZmlsZVxccHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFnQjtFQUNoQixhQUFZLEVBQ2Y7O0FBRUQ7RUFDSSxpQkFBZ0I7RUFDaEIsb0JBQW1CLEVBQ3RCOztBQUVEO0VBQ0ksWUFBVztFQUNYLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxhQUFZO0VBQUUsc0NBQXNDO0VBQ3BELDhCQUE2QjtFQUFFLHlCQUF5QjtFQUN4RCw4QkFBNkI7RUFDN0IsWUFBVyxFQUNkOztBQUVEO0VBQ0ksaUJBQWdCO0VBQ2hCLG1CQUFrQjtFQUNsQixtQkFBa0I7RUFDbEIsa0JBQWlCLEVBQ3BCIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3ZpZXdTaWRlIHtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICB3aWR0aDogMjUwcHg7XHJcbn1cclxuXHJcbiNyaWdodFNpZGUge1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbn1cclxuXHJcbiNyaWdodElubmVyIHtcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuLnRleHQtbGluZSB7XHJcbiAgICBib3JkZXI6IG5vbmU7IC8qIEdldCByaWQgb2YgdGhlIGJyb3dzZXIncyBzdHlsaW5nICovXHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZ3JheTsgLyogQWRkIHlvdXIgb3duIGJvcmRlciAqL1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubGFiZWwge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PatientService } from '../services/patient.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  patient:Object;\r\n\r\n  constructor(private router : Router, private patientService : PatientService) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService.getPatientDetails().subscribe(\r\n      res => {\r\n        this.patient = res['patient'];\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n    });\r\n  } \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable()\r\nexport class PatientService {\r\n\r\n    authToken: any;\r\n    patient: any;\r\n\r\n    constructor(private http: HttpClient, public jwtHelperService : JwtHelperService) {}\r\n\r\n    registerPatient(patient){\r\n        let headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('http://localhost:4000/patient/register', patient, {headers : headers});\r\n    }\r\n\r\n    authenticatePatient(patient){\r\n        let headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('http://localhost:4000/patient/authenticate', patient, {headers : headers});\r\n    }\r\n\r\n    getPatientDetails(){\r\n        let headers = new HttpHeaders();\r\n        this.loadToken();\r\n        headers.append('Authorization', this.authToken);\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get('http://localhost:4000/patient/profile', {headers : new HttpHeaders({\r\n            'Authorization': localStorage.getItem(\"id_token\"),\r\n            'Content-Type': 'application/json'\r\n        })});\r\n    }\r\n\r\n    storePatientData(token, patient){\r\n        localStorage.setItem('id_token', token);\r\n        localStorage.setItem('patient', JSON.stringify(patient));\r\n        this.authToken = token;\r\n        this.patient = patient;\r\n    }\r\n\r\n    loadToken(){\r\n        const token = localStorage.getItem('id_token');\r\n        this.authToken = token;\r\n    }\r\n    \r\n    logout(){\r\n        this.authToken = null;\r\n        this.patient = null;\r\n        localStorage.clear();\r\n    }\r\n\r\n    loggedIn(){\r\n        if (this.loadToken) {\r\n            if (!this.jwtHelperService.isTokenExpired(this.authToken))\r\n                return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //Get Clinic List\r\n    getClinics(){\r\n        return this.http.get('http://localhost:4000/patient/getClinic');\r\n    }\r\n\r\n    //Book Clinic\r\n    bookClinics(clinic){\r\n        return this.http.post('http://localhost:4000/patient/bookClinic', clinic, {headers: new HttpHeaders({\r\n            'Authorization': localStorage.getItem(\"id_token\")\r\n        })});\r\n    }\r\n\r\n    editPatientDetails(patient){\r\n        return this.http.post('http://localhost:4000/patient/editPatientDetail', patient, {headers : new HttpHeaders({\r\n            'Authorization': localStorage.getItem(\"id_token\")\r\n        })});    \r\n    }\r\n\r\n    //Get Patient's Appointment\r\n    getBookedClinics(){\r\n        return this.http.get('http://localhost:4000/patient/getBookedClinic', {headers: new HttpHeaders({\r\n            'Authorization': localStorage.getItem(\"id_token\")\r\n        })});\r\n    }\r\n\r\n}","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"table\\\" id=\\\"header\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\"><h3><b>View Visit History</b></h3></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container text-center\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Date</th>\\r\\n          <th scope=\\\"col\\\">Receipt Number</th>\\r\\n          <th scope=\\\"col\\\">View e-Receipt</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td></td>\\r\\n          <td></td>\\r\\n          <td></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".row {\\n  margin-bottom: 20px; }\\n\\n.container {\\n  font-size: 16px; }\\n\\n#header {\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlzaXQtaGlzdG9yeS9EOlxcU2Nob29sXFxOYW55YW5nIFBvbHl0ZWNobmljXFxGaW5hbCBQcm9qZWN0IE5ZUFxcR3JhYkhlYWx0aFdlYlxcR3JhYkhlYWx0aFdlYi9zcmNcXGFwcFxcdmlzaXQtaGlzdG9yeVxcdmlzaXQtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGdCQUFlLEVBQ2xCOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvdmlzaXQtaGlzdG9yeS92aXNpdC1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuI2hlYWRlciB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-visit-history',\r\n  templateUrl: './visit-history.component.html',\r\n  styleUrls: ['./visit-history.component.scss']\r\n})\r\nexport class VisitHistoryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}